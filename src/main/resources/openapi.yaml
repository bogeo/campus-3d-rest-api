openapi: 3.0.3
info:
  title: Campus 3D Data Portal
  description: Campus 3D Data Portal
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: pointclouds-api-controller
    description: Pointclouds Api Controller
paths:
  /pointclouds:
    get:
      tags:
        - pointclouds
      summary: Get all existing pointclouds metadata and raster
      operationId: getPointcloudsUsingGET
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointcloudMetadata'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - pointclouds
      summary: Add a new pointcloud as LAZ
      operationId: addPointcloudUsingPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - metadata
                - pointcloudId
              type: object
              properties:
                file:
                  type: string
                  description: file detail
                  format: binary
                metadata:
                  type: string
                  description: metadata
                pointcloudId:
                  type: integer
                  description: pointcloudId
                  format: int32
            encoding:
              metadata:
                contentType: text/plain
              pointcloudId:
                contentType: text/plain
      responses:
        '200':
          description: OK
        '201':
          description: CREATED
        '400':
          description: Bad Request
        '401':
          description: User Credentials are missing or invalid
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /pointclouds/{id}:
    get:
      tags:
        - pointclouds
      summary: Get a pointcloud LAZ file by ID
      operationId: getPointcloudByIdUsingGET
      parameters:
        - name: id
          in: path
          description: The pointcloud ID.
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - pointclouds
      summary: Updates a pointcloud by replacing the dataset with the new feature data
      operationId: replacePointcloudByIdUsingPUT
      parameters:
        - name: id
          in: path
          description: The pointcloud ID
          required: true
          style: simple
          schema:
            type: integer
            format: int32
        - name: metadata
          in: query
          description: metadata
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: file detail
                  format: binary
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: User Credentials are missing or invalid
        '403':
          description: Forbidden
        '404':
          description: pointcloud not found
    delete:
      tags:
        - pointclouds
      summary: Deletes a pointcloud by ID
      operationId: deletePointcloudByIdUsingDELETE
      parameters:
        - name: id
          in: path
          description: The pointcloud ID
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: User Credentials are missing or invalid
        '403':
          description: Forbidden
        '404':
          description: Spatial Unit not found
    patch:
      tags:
        - pointclouds
      summary: Updates a pointcloud metadata set by replacing the metadata contents
      operationId: replacePointcloudMetadataByIdUsingPATCH
      parameters:
        - name: id
          in: path
          description: The pointcloud id
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointcloudMetadata'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: User Credentials are missing or invalid
        '403':
          description: Forbidden
        '404':
          description: pointcloud not found
components:
  schemas:
    InputStream:
      title: InputStream
      type: object
    PointcloudMetadata:
      title: PointcloudMetadata
      required:
        - accuracy
        - attributeFields
        - boundary
        - dataSource
        - expression
        - freeText
        - license
        - measureDate
        - measureMethod
        - projection
      type: object
      properties:
        accuracy:
          $ref: '#/components/schemas/PointcloudMetadataAccuracy'
        attributeFields:
          type: array
          description: values assigned to the points in space
          items:
            type: string
            enum:
              - Intensity
              - None
              - Other
              - RGB
        boundary:
          type: string
          description: boundary of pointcloud in WGS84
        dataSource:
          $ref: '#/components/schemas/PointcloudMetadataDataSource'
        expression:
          $ref: '#/components/schemas/PointcloudMetadataExpression'
        freeText:
          type: string
          description: further informations
        license:
          type: string
          description: license type
        measureDate:
          $ref: '#/components/schemas/PointcloudMetadataMeasureDate'
        measureMethod:
          type: string
          description: method with which the point cloud was acquired
          enum:
            - ALS
            - MLS
            - Sonar / Multibeam
            - TLS
            - imagery
            - other
        projection:
          $ref: '#/components/schemas/PointcloudMetadataProjection'
        raster:
          type: string
          description: raster as base64 string
          format: byte
    PointcloudMetadataAccuracy:
      title: PointcloudMetadataAccuracy
      type: object
      properties:
        height:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
    PointcloudMetadataDataSource:
      title: PointcloudMetadataDataSource
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PointcloudMetadataDataSourceAddress'
        institution:
          type: string
        mail:
          type: string
        name:
          type: string
    PointcloudMetadataDataSourceAddress:
      title: PointcloudMetadataDataSourceAddress
      type: object
      properties:
        country:
          type: string
        hno:
          type: string
        street:
          type: string
        zipCode:
          type: string
    PointcloudMetadataExpression:
      title: PointcloudMetadataExpression
      type: object
      properties:
        kind:
          type: string
          enum:
            - irregular
            - regular
        pointDense:
          $ref: '#/components/schemas/PointcloudMetadataExpressionPointDense'
    PointcloudMetadataExpressionPointDense:
      title: PointcloudMetadataExpressionPointDense
      type: object
      properties:
        max:
          type: integer
          format: int32
        min:
          type: integer
          format: int32
    PointcloudMetadataMeasureDate:
      title: PointcloudMetadataMeasureDate
      type: object
      properties:
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
    PointcloudMetadataProjection:
      title: PointcloudMetadataProjection
      type: object
      properties:
        height:
          type: string
        position:
          type: string
    Resource:
      title: Resource
      type: object
      properties:
        description:
          type: string
        file:
          type: string
          format: binary
        filename:
          type: string
        inputStream:
          $ref: '#/components/schemas/InputStream'
        open:
          type: boolean
        readable:
          type: boolean
        uri:
          type: string
          format: uri
        url:
          type: string
          format: url
